# -*- coding: utf-8 -*-
"""Stable Diffusion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v5m8AvjYshPYScjrHfzfo5xTqQBZ7F7K

# Final Year Project: Image Synthesis using Stable Diffusion

[Hugging Face]
"""

import subprocess

try:
    packages = [
        "diffusers==0.12.1",
        "transformers==4.26.0",
        "accelerate==0.16.0",
        "scipy==1.*",
        "ftfy==6.*"
    ]
    for package in packages:
        subprocess.check_call(["pip", "install", "--upgrade", package])
    print("Package installation completed successfully.")
except subprocess.CalledProcessError as e:
    print(f"Failed to install packages: {e}")
except Exception as e:
    print(f"An error occurred: {e}")

"""Stable Diffusion `access_token`"""

import torch
from diffusers import StableDiffusionPipeline
import streamlit as st

access_token = "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"

pipe = StableDiffusionPipeline.from_pretrained(
  "CompVis/stable-diffusion-v1-4",
  torch_dtype=torch.float16,
  use_auth_token=access_token
).to("cuda")

"""Criteria from user

`prompt`

`number_of_images`
"""

from IPython.display import display_png, Image
from torch import autocast

def app():
    st.title("Image Synthesis with Stable Diffusion")

    # Get user input
    prompt = st.text_input("Enter your prompt", "three golden retrievers happily playing in the park")
    number_of_images = st.slider("Number of images to generate", 1, 5, 1)

    # Generate images
    if st.button("Generate Images"):
        with st.spinner("Generating images..."):
            with autocast("cuda"):
                images = pipe(prompt, num_images_per_prompt=number_of_images).images

        # Display generated images
        for image in images:
            st.image(image)

    # Footer
    st.markdown("---")
    st.write("Created by [Your Name]")

if __name__ == "__main__":
    app()
